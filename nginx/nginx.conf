events {
    worker_connections 1024;
}

http {
    upstream prometheus {
        server 127.0.0.1:9090;
    }

    upstream grafana {
        server 127.0.0.1:3000;
    }

    upstream alertmanager {
        server 127.0.0.1:9093;
    }

    # Basic auth for monitoring services
    server {
        listen 80;
        server_name 172.236.225.9;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name 172.236.225.9;

        # SSL Configuration (self-signed for now)
        ssl_certificate /etc/nginx/ssl/monitoring.crt;
        ssl_certificate_key /etc/nginx/ssl/monitoring.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Basic authentication
        auth_basic "Vice Monitoring Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Prometheus
        location /prometheus/ {
            rewrite ^/prometheus/(.*) /$1 break;
            proxy_pass http://prometheus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana (no additional auth needed, it has its own)
        location /grafana/ {
            auth_basic off;  # Disable nginx auth for Grafana
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Alertmanager
        location /alertmanager/ {
            proxy_pass http://alertmanager/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint (no auth)
        location /health {
            auth_basic off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 